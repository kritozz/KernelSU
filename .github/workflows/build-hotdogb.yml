name: Build KernelSU Boot for OnePlus 7T (hotdogb)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git bc bison flex libssl-dev libncurses5-dev libncursesw5-dev \
            build-essential ccache unzip wget \
            gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

      - name: List branches for OnePlus sm8150 repo (for debugging)
        run: |
          git ls-remote --heads https://github.com/OnePlusOSS/android_kernel_oneplus_sm8150

      # IMPORTANT: use R_10.0 (with the oneplus/ dir), not Q_10.0
      - name: Clone OnePlus kernel (oneplus/SM8150_R_10.0)
        run: |
          set -euxo pipefail
          rm -rf op7t_kernel || true
          git clone --depth=1 -b oneplus/SM8150_R_10.0 https://github.com/OnePlusOSS/android_kernel_oneplus_sm8150 op7t_kernel
          test -d op7t_kernel/oneplus && echo "Found oneplus/ dir ✅" || (echo "Missing oneplus/ dir ❌"; ls -la op7t_kernel; exit 1)

      - name: Inject KernelSU v0.9.5 (non-GKI)
        run: |
          set -euxo pipefail
          cd op7t_kernel
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
          git status

      # Speed-ups for subsequent runs
      - name: Enable ccache
        run: |
          echo 'export USE_CCACHE=1' >> $GITHUB_ENV
          echo 'export CCACHE_DIR=$HOME/.cache/ccache' >> $GITHUB_ENV
          ccache -o max_size=2G -z || true

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ github.workflow }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.workflow }}-
            ccache-${{ runner.os }}-

      - name: Configure & build kernel
        run: |
          set -euxo pipefail
          cd op7t_kernel
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE="ccache aarch64-linux-gnu-"
          make O=out hotdogb_defconfig || make O=out hotdog_defconfig || make O=out sm8150_defconfig
          make -j"$(nproc)" O=out
          ccache -s || true

      - name: Upload kernel image (Image.gz-dtb)
        uses: actions/upload-artifact@v4
        with:
          name: kernel-ksu
          path: op7t_kernel/out/arch/arm64/boot/Image.gz-dtb
